/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export interface AuditLog {
  action: string;
  created_at: Generated<string | null>;
  entity_id: number | null;
  entity_type: string;
  id: Generated<number | null>;
  metadata_json: string | null;
  new_values_json: string | null;
  old_values_json: string | null;
  user_ip: string | null;
  user_session_id: string | null;
}

export interface EventAttendance {
  attendance_source: Generated<string | null>;
  checked_in_at: string | null;
  checked_out_at: string | null;
  event_id: number;
  id: Generated<number | null>;
  member_id: number;
  notes: string | null;
}

export interface Events {
  created_at: Generated<string | null>;
  created_by_member_id: number | null;
  description: string | null;
  end_datetime: string;
  eventbrite_id: string | null;
  eventbrite_url: string | null;
  flags: Generated<number | null>;
  id: Generated<number | null>;
  max_capacity: number | null;
  name: string;
  required_membership_types: string | null;
  start_datetime: string;
  updated_at: Generated<string | null>;
}

export interface ExternalIntegrations {
  external_data_json: string | null;
  external_id: string;
  flags: Generated<number | null>;
  id: Generated<number | null>;
  last_synced_at: string | null;
  member_id: number;
  system_name: string;
}

export interface MemberMemberships {
  created_at: Generated<string | null>;
  end_date: string | null;
  external_payment_reference: string | null;
  id: Generated<number | null>;
  member_id: number;
  membership_type_id: number;
  notes: string | null;
  payment_status_id: number | null;
  start_date: string;
}

export interface Members {
  created_at: Generated<string | null>;
  date_added: Generated<string | null>;
  email: string;
  first_name: string;
  flags: Generated<number | null>;
  id: Generated<number | null>;
  last_name: string;
  preferred_name: string | null;
  pronouns: string | null;
  sponsor_notes: string | null;
  updated_at: Generated<string | null>;
}

export interface MembershipTypes {
  benefits_json: string | null;
  created_at: Generated<string | null>;
  description: string | null;
  exclusive_group_id: string | null;
  flags: Generated<number | null>;
  id: Generated<number | null>;
  name: string;
  price_cents: number | null;
}

export interface PaymentStatuses {
  created_at: Generated<string | null>;
  description: string | null;
  flags: Generated<number | null>;
  id: Generated<number | null>;
  name: string;
  sort_order: Generated<number | null>;
}

export interface SyncOperations {
  created_at: Generated<string | null>;
  error_message: string | null;
  external_id: string | null;
  id: Generated<number | null>;
  member_id: number | null;
  operation_type: string;
  payload_json: string | null;
  platform: string;
  processed_at: string | null;
  status: string;
}

export interface DB {
  audit_log: AuditLog;
  event_attendance: EventAttendance;
  events: Events;
  external_integrations: ExternalIntegrations;
  member_memberships: MemberMemberships;
  members: Members;
  membership_types: MembershipTypes;
  payment_statuses: PaymentStatuses;
  sync_operations: SyncOperations;
}
